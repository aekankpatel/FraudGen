{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhumiti\\\\Desktop\\\\BIA662\\\\Fraudgen\\\\fraudgen-client\\\\src\\\\components\\\\LocationDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LocationMap from './LocationMap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LocationDashboard() {\n  _s();\n  const [countryStats, setCountryStats] = useState([]);\n  const [vpnProxyStats, setVpnProxyStats] = useState([]);\n  const [locationTransactions, setLocationTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedCountry, setSelectedCountry] = useState('all');\n  const containerStyles = {\n    maxWidth: '1200px',\n    margin: '0 auto'\n  };\n  const dashboardGridStyles = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(2, 1fr)',\n    gap: '25px',\n    marginBottom: '30px'\n  };\n  const cardStyles = {\n    backgroundColor: 'white',\n    borderRadius: '8px',\n    padding: '20px',\n    boxShadow: '0 2px 10px rgba(0, 0, 0, 0.05)'\n  };\n  const cardHeaderStyles = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '15px'\n  };\n  const tableStyles = {\n    width: '100%',\n    borderCollapse: 'collapse'\n  };\n  const tableHeaderStyles = {\n    padding: '12px',\n    textAlign: 'left',\n    borderBottom: '1px solid #eee',\n    backgroundColor: '#f9f9f9',\n    fontWeight: '600'\n  };\n  const tableCellStyles = {\n    padding: '12px',\n    textAlign: 'left',\n    borderBottom: '1px solid #eee'\n  };\n  const progressBarContainerStyles = {\n    height: '16px',\n    backgroundColor: '#f0f0f0',\n    borderRadius: '8px',\n    overflow: 'hidden'\n  };\n  const progressBarStyles = value => ({\n    height: '100%',\n    width: `${value}%`,\n    backgroundColor: value > 50 ? '#e74c3c' : value > 25 ? '#f39c12' : '#2ecc71',\n    borderRadius: '8px'\n  });\n  const filtersStyles = {\n    marginBottom: '20px',\n    display: 'flex',\n    gap: '10px'\n  };\n  const filterSelectStyles = {\n    padding: '8px 12px',\n    borderRadius: '4px',\n    border: '1px solid #ddd',\n    backgroundColor: 'white'\n  };\n  const mapContainerStyles = {\n    marginBottom: '25px',\n    backgroundColor: 'white',\n    borderRadius: '8px',\n    padding: '20px',\n    boxShadow: '0 2px 10px rgba(0, 0, 0, 0.05)'\n  };\n  const fraudRowStyles = {\n    backgroundColor: 'rgba(231, 76, 60, 0.1)'\n  };\n  const highRiskRowStyles = {\n    backgroundColor: 'rgba(243, 156, 18, 0.1)'\n  };\n  const refreshButtonStyles = {\n    padding: '8px 12px',\n    backgroundColor: '#3498db',\n    color: 'white',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    marginLeft: '10px'\n  };\n  useEffect(() => {\n    const fetchLocationData = async () => {\n      setLoading(true);\n      try {\n        // Fetch location statistics\n        const statsResponse = await fetch('http://localhost:5000/api/statistics/locations');\n        if (!statsResponse.ok) {\n          throw new Error(`Statistics API returned ${statsResponse.status}`);\n        }\n        const statsData = await statsResponse.json();\n        setCountryStats(statsData.country_statistics || []);\n        setVpnProxyStats(statsData.vpn_proxy_statistics || []);\n\n        // Fetch transactions with location data\n        const txQuery = selectedCountry !== 'all' ? `?country=${selectedCountry}&limit=10` : '?limit=10';\n        const txResponse = await fetch(`http://localhost:5000/api/transactions${txQuery}`);\n        if (!txResponse.ok) {\n          throw new Error(`Transactions API returned ${txResponse.status}`);\n        }\n        const txData = await txResponse.json();\n\n        // Set default values for missing data\n        const processedTransactions = (txData.transactions || []).map(tx => ({\n          ...tx,\n          transaction_data: tx.transaction_data || {\n            type: 'Unknown',\n            amount: 0\n          },\n          location_data: tx.location_data || {\n            country: 'Unknown',\n            city: 'Unknown',\n            region: 'Unknown',\n            latitude: 0,\n            longitude: 0,\n            is_vpn: false,\n            is_proxy: false\n          }\n        }));\n        setLocationTransactions(processedTransactions);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching location data:\", err);\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchLocationData();\n\n    // Poll for updates every 30 seconds\n    const intervalId = setInterval(fetchLocationData, 30000);\n    return () => clearInterval(intervalId);\n  }, [selectedCountry]);\n  const handleCountryChange = e => {\n    setSelectedCountry(e.target.value);\n  };\n  const handleRefresh = async () => {\n    setLoading(true);\n    try {\n      // Fetch location statistics\n      const statsResponse = await fetch('http://localhost:5000/api/statistics/locations');\n      if (!statsResponse.ok) {\n        throw new Error(`Statistics API returned ${statsResponse.status}`);\n      }\n      const statsData = await statsResponse.json();\n      setCountryStats(statsData.country_statistics || []);\n      setVpnProxyStats(statsData.vpn_proxy_statistics || []);\n\n      // Fetch transactions with location data\n      const txQuery = selectedCountry !== 'all' ? `?country=${selectedCountry}&limit=10` : '?limit=10';\n      const txResponse = await fetch(`http://localhost:5000/api/transactions${txQuery}`);\n      if (!txResponse.ok) {\n        throw new Error(`Transactions API returned ${txResponse.status}`);\n      }\n      const txData = await txResponse.json();\n\n      // Set default values for missing data\n      const processedTransactions = (txData.transactions || []).map(tx => ({\n        ...tx,\n        transaction_data: tx.transaction_data || {\n          type: 'Unknown',\n          amount: 0\n        },\n        location_data: tx.location_data || {\n          country: 'Unknown',\n          city: 'Unknown',\n          region: 'Unknown',\n          latitude: 0,\n          longitude: 0,\n          is_vpn: false,\n          is_proxy: false\n        }\n      }));\n      setLocationTransactions(processedTransactions);\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Error refreshing data:\", err);\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  if (loading && countryStats.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '20px',\n        fontSize: '18px',\n        color: '#3498db'\n      },\n      children: \"Loading location data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this);\n  }\n  if (error && countryStats.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#fceaea',\n        border: '1px solid #e74c3c',\n        padding: '10px',\n        borderRadius: '4px',\n        color: '#e74c3c',\n        marginBottom: '20px'\n      },\n      children: [\"Error loading location data: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyles,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Location-Based Fraud Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Monitor fraud patterns by geographic location and detect suspicious location-based activities.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: filtersStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCountry,\n        onChange: handleCountryChange,\n        style: filterSelectStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Countries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), countryStats.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country.country,\n          children: country.country\n        }, country.country, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRefresh,\n        style: refreshButtonStyles,\n        disabled: loading,\n        children: loading ? 'Refreshing...' : 'Refresh Data'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: mapContainerStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: cardHeaderStyles,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Transaction Locations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LocationMap, {\n        transactions: locationTransactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: dashboardGridStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: cardStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: cardHeaderStyles,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Fraud by Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          style: tableStyles,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: tableHeaderStyles,\n                children: \"Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: tableHeaderStyles,\n                children: \"Transactions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: tableHeaderStyles,\n                children: \"Fraud Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: tableHeaderStyles,\n                children: \"Distribution\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [countryStats.slice(0, 5).map(country => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: tableCellStyles,\n                children: country.country\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: tableCellStyles,\n                children: country.total_transactions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: tableCellStyles,\n                children: [country.fraud_percentage, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: tableCellStyles,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: progressBarContainerStyles,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: progressBarStyles(country.fraud_percentage)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this)]\n            }, country.country, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this)), countryStats.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"4\",\n                style: {\n                  ...tableCellStyles,\n                  textAlign: 'center'\n                },\n                children: \"No country statistics available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: cardStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: cardHeaderStyles,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"VPN/Proxy Impact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          style: tableStyles,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: tableHeaderStyles,\n                children: \"VPN/Proxy Used\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: tableHeaderStyles,\n                children: \"Transactions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: tableHeaderStyles,\n                children: \"Fraud Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: tableHeaderStyles,\n                children: \"Distribution\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [vpnProxyStats.map(stat => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: tableCellStyles,\n                children: stat.using_vpn_proxy\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: tableCellStyles,\n                children: stat.total_transactions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: tableCellStyles,\n                children: [stat.fraud_percentage, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: tableCellStyles,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: progressBarContainerStyles,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: progressBarStyles(stat.fraud_percentage)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this)]\n            }, stat.using_vpn_proxy, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)), vpnProxyStats.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"4\",\n                style: {\n                  ...tableCellStyles,\n                  textAlign: 'center'\n                },\n                children: \"No VPN/proxy statistics available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: cardStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: cardHeaderStyles,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recent Transactions by Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), locationTransactions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No transactions available for the selected location.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        style: tableStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeaderStyles,\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeaderStyles,\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeaderStyles,\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeaderStyles,\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeaderStyles,\n              children: \"VPN/Proxy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeaderStyles,\n              children: \"Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: locationTransactions.map(tx => {\n            var _tx$transaction_data;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: tx.prediction && tx.prediction.includes('FRAUD') ? fraudRowStyles : tx.prediction && tx.prediction.includes('HIGH_RISK') ? highRiskRowStyles : null,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: tableCellStyles,\n                children: tx.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: tableCellStyles,\n                children: ((_tx$transaction_data = tx.transaction_data) === null || _tx$transaction_data === void 0 ? void 0 : _tx$transaction_data.type) || 'Unknown'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: tableCellStyles,\n                children: [\"$\", tx.transaction_data && tx.transaction_data.amount && typeof tx.transaction_data.amount === 'number' ? tx.transaction_data.amount.toLocaleString() : '0']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: tableCellStyles,\n                children: tx.location_data ? `${tx.location_data.city || 'Unknown'}, ${tx.location_data.country || 'Unknown'}` : 'Location unavailable'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: tableCellStyles,\n                children: tx.location_data && (tx.location_data.is_vpn || tx.location_data.is_proxy) ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: '#e74c3c',\n                    fontWeight: 'bold'\n                  },\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 23\n                }, this) : 'No'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: tableCellStyles,\n                children: tx.prediction || 'Unknown'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this)]\n            }, tx.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n_s(LocationDashboard, \"bD/6v8D5C5YT4GEjnVHyUmpf6Dw=\");\n_c = LocationDashboard;\nexport default LocationDashboard;\nvar _c;\n$RefreshReg$(_c, \"LocationDashboard\");","map":{"version":3,"names":["React","useState","useEffect","LocationMap","jsxDEV","_jsxDEV","LocationDashboard","_s","countryStats","setCountryStats","vpnProxyStats","setVpnProxyStats","locationTransactions","setLocationTransactions","loading","setLoading","error","setError","selectedCountry","setSelectedCountry","containerStyles","maxWidth","margin","dashboardGridStyles","display","gridTemplateColumns","gap","marginBottom","cardStyles","backgroundColor","borderRadius","padding","boxShadow","cardHeaderStyles","justifyContent","alignItems","tableStyles","width","borderCollapse","tableHeaderStyles","textAlign","borderBottom","fontWeight","tableCellStyles","progressBarContainerStyles","height","overflow","progressBarStyles","value","filtersStyles","filterSelectStyles","border","mapContainerStyles","fraudRowStyles","highRiskRowStyles","refreshButtonStyles","color","cursor","marginLeft","fetchLocationData","statsResponse","fetch","ok","Error","status","statsData","json","country_statistics","vpn_proxy_statistics","txQuery","txResponse","txData","processedTransactions","transactions","map","tx","transaction_data","type","amount","location_data","country","city","region","latitude","longitude","is_vpn","is_proxy","err","console","message","intervalId","setInterval","clearInterval","handleCountryChange","e","target","handleRefresh","length","style","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","disabled","slice","total_transactions","fraud_percentage","colSpan","stat","using_vpn_proxy","_tx$transaction_data","prediction","includes","id","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Bhumiti/Desktop/BIA662/Fraudgen/fraudgen-client/src/components/LocationDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport LocationMap from './LocationMap';\r\n\r\nfunction LocationDashboard() {\r\n  const [countryStats, setCountryStats] = useState([]);\r\n  const [vpnProxyStats, setVpnProxyStats] = useState([]);\r\n  const [locationTransactions, setLocationTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedCountry, setSelectedCountry] = useState('all');\r\n\r\n  const containerStyles = {\r\n    maxWidth: '1200px',\r\n    margin: '0 auto'\r\n  };\r\n\r\n  const dashboardGridStyles = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(2, 1fr)',\r\n    gap: '25px',\r\n    marginBottom: '30px'\r\n  };\r\n\r\n  const cardStyles = {\r\n    backgroundColor: 'white',\r\n    borderRadius: '8px',\r\n    padding: '20px',\r\n    boxShadow: '0 2px 10px rgba(0, 0, 0, 0.05)'\r\n  };\r\n\r\n  const cardHeaderStyles = {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: '15px'\r\n  };\r\n\r\n  const tableStyles = {\r\n    width: '100%',\r\n    borderCollapse: 'collapse'\r\n  };\r\n\r\n  const tableHeaderStyles = {\r\n    padding: '12px',\r\n    textAlign: 'left',\r\n    borderBottom: '1px solid #eee',\r\n    backgroundColor: '#f9f9f9',\r\n    fontWeight: '600'\r\n  };\r\n\r\n  const tableCellStyles = {\r\n    padding: '12px',\r\n    textAlign: 'left',\r\n    borderBottom: '1px solid #eee'\r\n  };\r\n\r\n  const progressBarContainerStyles = {\r\n    height: '16px',\r\n    backgroundColor: '#f0f0f0',\r\n    borderRadius: '8px',\r\n    overflow: 'hidden'\r\n  };\r\n\r\n  const progressBarStyles = (value) => ({\r\n    height: '100%',\r\n    width: `${value}%`,\r\n    backgroundColor: value > 50 ? '#e74c3c' : value > 25 ? '#f39c12' : '#2ecc71',\r\n    borderRadius: '8px'\r\n  });\r\n\r\n  const filtersStyles = {\r\n    marginBottom: '20px',\r\n    display: 'flex',\r\n    gap: '10px'\r\n  };\r\n\r\n  const filterSelectStyles = {\r\n    padding: '8px 12px',\r\n    borderRadius: '4px',\r\n    border: '1px solid #ddd',\r\n    backgroundColor: 'white'\r\n  };\r\n\r\n  const mapContainerStyles = {\r\n    marginBottom: '25px',\r\n    backgroundColor: 'white',\r\n    borderRadius: '8px',\r\n    padding: '20px',\r\n    boxShadow: '0 2px 10px rgba(0, 0, 0, 0.05)'\r\n  };\r\n\r\n  const fraudRowStyles = {\r\n    backgroundColor: 'rgba(231, 76, 60, 0.1)'\r\n  };\r\n\r\n  const highRiskRowStyles = {\r\n    backgroundColor: 'rgba(243, 156, 18, 0.1)'\r\n  };\r\n\r\n  const refreshButtonStyles = {\r\n    padding: '8px 12px',\r\n    backgroundColor: '#3498db',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n    marginLeft: '10px'\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchLocationData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // Fetch location statistics\r\n        const statsResponse = await fetch('http://localhost:5000/api/statistics/locations');\r\n        if (!statsResponse.ok) {\r\n          throw new Error(`Statistics API returned ${statsResponse.status}`);\r\n        }\r\n        const statsData = await statsResponse.json();\r\n        setCountryStats(statsData.country_statistics || []);\r\n        setVpnProxyStats(statsData.vpn_proxy_statistics || []);\r\n        \r\n        // Fetch transactions with location data\r\n        const txQuery = selectedCountry !== 'all' ? `?country=${selectedCountry}&limit=10` : '?limit=10';\r\n        const txResponse = await fetch(`http://localhost:5000/api/transactions${txQuery}`);\r\n        if (!txResponse.ok) {\r\n          throw new Error(`Transactions API returned ${txResponse.status}`);\r\n        }\r\n        const txData = await txResponse.json();\r\n        \r\n        // Set default values for missing data\r\n        const processedTransactions = (txData.transactions || []).map(tx => ({\r\n          ...tx,\r\n          transaction_data: tx.transaction_data || {\r\n            type: 'Unknown',\r\n            amount: 0\r\n          },\r\n          location_data: tx.location_data || {\r\n            country: 'Unknown',\r\n            city: 'Unknown',\r\n            region: 'Unknown',\r\n            latitude: 0,\r\n            longitude: 0,\r\n            is_vpn: false,\r\n            is_proxy: false\r\n          }\r\n        }));\r\n        \r\n        setLocationTransactions(processedTransactions);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(\"Error fetching location data:\", err);\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchLocationData();\r\n    \r\n    // Poll for updates every 30 seconds\r\n    const intervalId = setInterval(fetchLocationData, 30000);\r\n    return () => clearInterval(intervalId);\r\n  }, [selectedCountry]);\r\n\r\n  const handleCountryChange = (e) => {\r\n    setSelectedCountry(e.target.value);\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Fetch location statistics\r\n      const statsResponse = await fetch('http://localhost:5000/api/statistics/locations');\r\n      if (!statsResponse.ok) {\r\n        throw new Error(`Statistics API returned ${statsResponse.status}`);\r\n      }\r\n      const statsData = await statsResponse.json();\r\n      setCountryStats(statsData.country_statistics || []);\r\n      setVpnProxyStats(statsData.vpn_proxy_statistics || []);\r\n      \r\n      // Fetch transactions with location data\r\n      const txQuery = selectedCountry !== 'all' ? `?country=${selectedCountry}&limit=10` : '?limit=10';\r\n      const txResponse = await fetch(`http://localhost:5000/api/transactions${txQuery}`);\r\n      if (!txResponse.ok) {\r\n        throw new Error(`Transactions API returned ${txResponse.status}`);\r\n      }\r\n      const txData = await txResponse.json();\r\n      \r\n      // Set default values for missing data\r\n      const processedTransactions = (txData.transactions || []).map(tx => ({\r\n        ...tx,\r\n        transaction_data: tx.transaction_data || {\r\n          type: 'Unknown',\r\n          amount: 0\r\n        },\r\n        location_data: tx.location_data || {\r\n          country: 'Unknown',\r\n          city: 'Unknown',\r\n          region: 'Unknown',\r\n          latitude: 0,\r\n          longitude: 0,\r\n          is_vpn: false,\r\n          is_proxy: false\r\n        }\r\n      }));\r\n      \r\n      setLocationTransactions(processedTransactions);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(\"Error refreshing data:\", err);\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading && countryStats.length === 0) {\r\n    return (\r\n      <div style={{ textAlign: 'center', padding: '20px', fontSize: '18px', color: '#3498db' }}>\r\n        Loading location data...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error && countryStats.length === 0) {\r\n    return (\r\n      <div style={{ backgroundColor: '#fceaea', border: '1px solid #e74c3c', padding: '10px', borderRadius: '4px', color: '#e74c3c', marginBottom: '20px' }}>\r\n        Error loading location data: {error}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={containerStyles}>\r\n      <h1>Location-Based Fraud Analysis</h1>\r\n      <p>Monitor fraud patterns by geographic location and detect suspicious location-based activities.</p>\r\n      \r\n      {/* Filters */}\r\n      <div style={filtersStyles}>\r\n        <select \r\n          value={selectedCountry} \r\n          onChange={handleCountryChange} \r\n          style={filterSelectStyles}\r\n        >\r\n          <option value=\"all\">All Countries</option>\r\n          {countryStats.map(country => (\r\n            <option key={country.country} value={country.country}>{country.country}</option>\r\n          ))}\r\n        </select>\r\n        <button \r\n          onClick={handleRefresh} \r\n          style={refreshButtonStyles} \r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Refreshing...' : 'Refresh Data'}\r\n        </button>\r\n      </div>\r\n      \r\n      {/* Map Visualization */}\r\n      <div style={mapContainerStyles}>\r\n        <div style={cardHeaderStyles}>\r\n          <h2>Transaction Locations</h2>\r\n        </div>\r\n        <LocationMap transactions={locationTransactions} />\r\n      </div>\r\n      \r\n      {/* Stats Dashboard */}\r\n      <div style={dashboardGridStyles}>\r\n        {/* Country Fraud Rates */}\r\n        <div style={cardStyles}>\r\n          <div style={cardHeaderStyles}>\r\n            <h2>Fraud by Country</h2>\r\n          </div>\r\n          <table style={tableStyles}>\r\n            <thead>\r\n              <tr>\r\n                <th style={tableHeaderStyles}>Country</th>\r\n                <th style={tableHeaderStyles}>Transactions</th>\r\n                <th style={tableHeaderStyles}>Fraud Rate</th>\r\n                <th style={tableHeaderStyles}>Distribution</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {countryStats.slice(0, 5).map(country => (\r\n                <tr key={country.country}>\r\n                  <td style={tableCellStyles}>{country.country}</td>\r\n                  <td style={tableCellStyles}>{country.total_transactions}</td>\r\n                  <td style={tableCellStyles}>{country.fraud_percentage}%</td>\r\n                  <td style={tableCellStyles}>\r\n                    <div style={progressBarContainerStyles}>\r\n                      <div style={progressBarStyles(country.fraud_percentage)}></div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n              {countryStats.length === 0 && (\r\n                <tr>\r\n                  <td colSpan=\"4\" style={{...tableCellStyles, textAlign: 'center'}}>\r\n                    No country statistics available\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        \r\n        {/* VPN/Proxy Stats */}\r\n        <div style={cardStyles}>\r\n          <div style={cardHeaderStyles}>\r\n            <h2>VPN/Proxy Impact</h2>\r\n          </div>\r\n          <table style={tableStyles}>\r\n            <thead>\r\n              <tr>\r\n                <th style={tableHeaderStyles}>VPN/Proxy Used</th>\r\n                <th style={tableHeaderStyles}>Transactions</th>\r\n                <th style={tableHeaderStyles}>Fraud Rate</th>\r\n                <th style={tableHeaderStyles}>Distribution</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {vpnProxyStats.map(stat => (\r\n                <tr key={stat.using_vpn_proxy}>\r\n                  <td style={tableCellStyles}>{stat.using_vpn_proxy}</td>\r\n                  <td style={tableCellStyles}>{stat.total_transactions}</td>\r\n                  <td style={tableCellStyles}>{stat.fraud_percentage}%</td>\r\n                  <td style={tableCellStyles}>\r\n                    <div style={progressBarContainerStyles}>\r\n                      <div style={progressBarStyles(stat.fraud_percentage)}></div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n              {vpnProxyStats.length === 0 && (\r\n                <tr>\r\n                  <td colSpan=\"4\" style={{...tableCellStyles, textAlign: 'center'}}>\r\n                    No VPN/proxy statistics available\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Recent Location-Based Transactions */}\r\n      <div style={cardStyles}>\r\n        <div style={cardHeaderStyles}>\r\n          <h2>Recent Transactions by Location</h2>\r\n        </div>\r\n        \r\n        {locationTransactions.length === 0 ? (\r\n          <p>No transactions available for the selected location.</p>\r\n        ) : (\r\n          <table style={tableStyles}>\r\n            <thead>\r\n              <tr>\r\n                <th style={tableHeaderStyles}>ID</th>\r\n                <th style={tableHeaderStyles}>Type</th>\r\n                <th style={tableHeaderStyles}>Amount</th>\r\n                <th style={tableHeaderStyles}>Location</th>\r\n                <th style={tableHeaderStyles}>VPN/Proxy</th>\r\n                <th style={tableHeaderStyles}>Result</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {locationTransactions.map(tx => (\r\n                <tr \r\n                  key={tx.id} \r\n                  style={\r\n                    tx.prediction && tx.prediction.includes('FRAUD') ? fraudRowStyles : \r\n                    tx.prediction && tx.prediction.includes('HIGH_RISK') ? highRiskRowStyles : \r\n                    null\r\n                  }\r\n                >\r\n                  <td style={tableCellStyles}>{tx.id}</td>\r\n                  <td style={tableCellStyles}>{tx.transaction_data?.type || 'Unknown'}</td>\r\n                  <td style={tableCellStyles}>\r\n                    ${tx.transaction_data && tx.transaction_data.amount && \r\n                      typeof tx.transaction_data.amount === 'number' ? \r\n                      tx.transaction_data.amount.toLocaleString() : '0'}\r\n                  </td>\r\n                  <td style={tableCellStyles}>\r\n                    {tx.location_data ? (\r\n                      `${tx.location_data.city || 'Unknown'}, ${tx.location_data.country || 'Unknown'}`\r\n                    ) : (\r\n                      'Location unavailable'\r\n                    )}\r\n                  </td>\r\n                  <td style={tableCellStyles}>\r\n                    {tx.location_data && (tx.location_data.is_vpn || tx.location_data.is_proxy) ? (\r\n                      <span style={{ color: '#e74c3c', fontWeight: 'bold' }}>Yes</span>\r\n                    ) : (\r\n                      'No'\r\n                    )}\r\n                  </td>\r\n                  <td style={tableCellStyles}>{tx.prediction || 'Unknown'}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LocationDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}